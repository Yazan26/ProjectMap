# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - avansict2233343

env:
  ARTIFACT_NAME: .net-app
  DOTNET_CORE_VERSION: 9.x
  PUBLISH_DIRECTORY: "myapp"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check:
    runs-on: windows-latest
    steps:
      - name: "Check if AZUREAPPSERVICE_CLIENTID secret exists"
        env: 
          super_secret: ${{ secrets.AZUREAPPSERVICE_CLIENTID_6C2616207D764ADCAF9995C22B6E5DD0 }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "Secret AZUREAPPSERVICE_CLIENTID is missing."; exit 1;'

      - name: "Check if AZUREAPPSERVICE_TENANTID secret exists"
        env: 
          super_secret: ${{ secrets.AZUREAPPSERVICE_TENANTID_5FC994FFC9D24049AD46E9E8A58A121E }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "Secret AZUREAPPSERVICE_TENANTID is missing."; exit 1;'

      - name: "Check if AZUREAPPSERVICE_SUBSCRIPTIONID secret exists"
        env: 
          super_secret: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_09DCC5EDA53D4C5E8D8A61BAE34CCCAF }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "Secret AZUREAPPSERVICE_SUBSCRIPTIONID is missing."; exit 1;'

  build:
    runs-on: windows-latest
    needs: check
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_CORE_VERSION}}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Clean publish directory
        run: |
          if (Test-Path -Path ${{runner.temp}}/${{env.PUBLISH_DIRECTORY}}) { Remove-Item -Recurse -Force ${{runner.temp}}/${{env.PUBLISH_DIRECTORY}} }
          New-Item -ItemType Directory -Path ${{runner.temp}}/${{env.PUBLISH_DIRECTORY}}

      - name: dotnet publish
        run: dotnet publish -c Release -o "${{runner.temp}}/${{env.PUBLISH_DIRECTORY}}"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{runner.temp}}/${{env.PUBLISH_DIRECTORY}}

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{runner.temp}}/${{env.PUBLISH_DIRECTORY}}

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_6C2616207D764ADCAF9995C22B6E5DD0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_5FC994FFC9D24049AD46E9E8A58A121E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_09DCC5EDA53D4C5E8D8A61BAE34CCCAF }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'avansict2233343'
          slot-name: 'Production'
          package: ${{runner.temp}}/${{env.PUBLISH_DIRECTORY}}
