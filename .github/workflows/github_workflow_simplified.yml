name: Build, Test and Deploy a .NET Core WebApi to Azure App Service

env:
  ARTIFACT_NAME: WebApi
  DOTNET_CORE_VERSION: 9.0.x
  PUBLISH_DIRECTORY: "./out/publish"
on:
  push:
    branches:
      - main
      - deployment 
      - master

  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: "Check if AZURE_WEBAPP_NAME secret exists"
        env: 
          super_secret: ${{ secrets.AZURE_WEBAPP_NAME }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "Secret AZURE_WEBAPP_NAME is missing."; exit 1;'

      - name: "Check if AZURE_WEBAPP_PUBLISH_PASSWORD secret exists"
        env: 
          super_secret: ${{ secrets.AZURE_WEBAPP_PUBLISH_PASSWORD }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "Secret AZURE_WEBAPP_PUBLISH_PASSWORD is missing."; exit 1;'

      - name: "Check if AZURE_WEBAPP_PUBLISH_USERNAME secret exists"
        env: 
          super_secret: ${{ secrets.AZURE_WEBAPP_PUBLISH_USERNAME }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "Secret AZURE_WEBAPP_PUBLISH_USERNAME is missing."; exit 1;'

      - name: "Check if WEBAPI_PROJECT_NAME secret exists"
        env: 
          super_secret: ${{ secrets.WEBAPI_PROJECT_NAME }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "Secret WEBAPI_PROJECT_NAME is missing."; exit 1;'

  build:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_CORE_VERSION}}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Clean publish directory
        run: |
          rm -rf ${{env.PUBLISH_DIRECTORY}}
          mkdir -p ${{env.PUBLISH_DIRECTORY}}

      - name: Publish
        run: dotnet publish ./${{ secrets.WEBAPI_PROJECT_NAME }} --output ${{env.PUBLISH_DIRECTORY}} --configuration Release

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIRECTORY}}

  deploy:
    runs-on: ubuntu-latest
    needs: [check, build]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIRECTORY}}

      - name: 'Deploy to Azure App Service'
        uses: azure/webapps-deploy@v3
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: <publishData><publishProfile profileName="${{secrets.AZURE_WEBAPP_NAME}} - Zip Deploy" publishMethod="ZipDeploy" publishUrl="${{ secrets.AZURE_WEBAPP_NAME }}.scm.azurewebsites.net:443" userName="${{ secrets.AZURE_WEBAPP_PUBLISH_USERNAME }}" userPWD="${{ secrets.AZURE_WEBAPP_PUBLISH_PASSWORD }}" destinationAppUrl="http://${{ secrets.AZURE_WEBAPP_NAME }}.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>
          package: '${{ env.PUBLISH_DIRECTORY}}'
